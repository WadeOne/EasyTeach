@{
    ViewBag.Title = "Scores";
}

<link rel="stylesheet" href="http://cdn.kendostatic.com/2014.2.716/styles/kendo.common.min.css">
<link rel="stylesheet" href="http://cdn.kendostatic.com/2014.2.716/styles/kendo.rtl.min.css">
<link rel="stylesheet" href="http://cdn.kendostatic.com/2014.2.716/styles/kendo.default.min.css">
<link rel="stylesheet" href="http://cdn.kendostatic.com/2014.2.716/styles/kendo.dataviz.min.css">
<link rel="stylesheet" href="http://cdn.kendostatic.com/2014.2.716/styles/kendo.dataviz.default.min.css">
<link rel="stylesheet" href="http://cdn.kendostatic.com/2014.2.716/styles/kendo.mobile.all.min.css">

<style type="text/css">
    .enableDay {
        display: block;
        overflow: hidden;
        min-height: 22px;
        line-height: 22px;
        padding: 0 .45em 0 .1em;
        cursor: default;
        opacity: 0.5;
        color: royalblue;
        font-weight:bold;
    }
    .disableDay {
        display: block;
        overflow: hidden;
        min-height: 22px;
        line-height: 22px;
        padding: 0 .45em 0 .1em;
        cursor: default;
        opacity: 0.5;
        color: gainsboro;
        font-weight:bold;
    }
</style>

<script src="http://code.jquery.com/jquery-1.9.1.min.js"></script>
<script src="http://cdn.kendostatic.com/2014.2.716/js/kendo.all.min.js"></script>

<div id="body">
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h1>Scores</h1>
            </hgroup>
            <div id="Grid" style="height: 380px"></div>
        </div>
    </section>
</div>

@section scripts
{
    <script>
        $(document).ready(function() {
            $("#Grid").kendoGrid({
                columns: [
                    { field: "Score", title: "Score", width: "50px" },
                    { field: "AssignedTo", title: "Assigned To", width: "100px", editor: toDropDownEditor },
                    { field: "AssignedBy", title: "Assigned By", width: "100px", editor: byDropDownEditor },
                    { field: "Task", title: "Task", width: "75px", editor: taskDropDownEditor },
                    { field: "DisplayDate", title: "Visit Date", width: "75px", editor: dateVisitPickerEditor, type: "date", format: "{0:d MMM, yyyy}" },
                    { command: "edit", title: "Edit", width: "110px" },
                    { command: "destroy", title: "Delete", width: "110px" }
                ],
                pageable: true,
                pageSize: 5,
                sortable: true,
                filterable: true,
                editable: "popup",
                toolbar: ["create"],
                dataSource: {
                    serverPaging: true,
                    serverFiltering: true,
                    serverSorting: true,
                    pageSize: 5,
                    type: "odata",
                    schema: {
                        parse: function(data) {
                            if (data.value === undefined) {
                                if (data.Date && typeof data.Date === "string") {
                                    data.Date = new Date(data.Date);
                                }
                            } else {
                                $.each(data.value, function(idx, lesson) {
                                    if (lesson.Date && typeof lesson.Date === "string") {
                                        lesson.Date = new Date(lesson.Date);
                                    }
                                });
                            }

                            return data;
                        },
                        data: function(response) {
                            if (response.value !== undefined)
                                return response.value;
                            else {
                                delete response["odata.metadata"];
                                return response;
                            }
                        },
                        total: function(response) {
                            return response['odata.count'];
                        },
                        model: {
                            id: "ScoreId",
                            fields: {
                                ScoreId: { editable: false, type: "number" },
                                Score: { nullable: false, type: "number" },
                                AssignedToId: { type: "number", validation: { required: true }, editable: true },
                                AssignedTo: { validation: { required: true }, editable: true },
                                AssignedById: { type: "number", validation: { required: true }, editable: true },
                                AssignedBy: { validation: { required: true }, editable: true },
                                Task: { type: "string", nullable: true },
                                DisplayDate: { nullable: false, type: "date" },
                            }
                        },
                    },
                    batch: false,
                    error: error,
                    transport: {
                        create: {
                            url: "/odata/Scores",
                            contentType: "application/json",
                            type: "POST",
                            complete: function() {
                                $('#Grid').data('kendoGrid').dataSource.read();
                            }
                        },
                        read: {
                            url: "/odata/Scores",
                            dataType: "json",
                            contentType: "application/json"
                        },
                        update: {
                            url: function(record) {
                                return "/odata/Scores" + "(" + record.ScoreId + ")";
                            },
                            dataType: "json",
                            contentType: "application/json",
                            type: "PUT",
                            headers: { Prefer: "return-content" },
                            complete: function() {
                                $('#Grid').data('kendoGrid').dataSource.read();
                            }
                        },
                        destroy: {
                            url: function(record) {
                                return "/odata/Scores" + "(" + record.ScoreId + ")";
                            },
                            contentType: "application/json",
                            type: "DELETE"
                        },
                        parametermap: function(data, operation) {
                            console.log(data);
                            if (operation === "read") {
                                var parammap = kendo.data.transports.odata.parametermap(data);
                                return parammap;
                            }
                            return json.stringify(data);
                        }
                    }
                }
            });
        });

        function toDropDownEditor(container) {
            $('<input data-bind="value:AssignedToId"/>')
                .appendTo(container)
                .kendoDropDownList({
                    dataTextField: "DisplayName",
                    dataValueField: "UserId",
                    optionLabel: "--Select Student--",
                    dataSource: {
                        schema: {
                            data: "value",
                            total: function(response) {
                                return response['odata.count'];
                            },
                            model: {
                                id: "UserId",
                                fields: {
                                    UserId: { editable: false, type: "number" },
                                    DisplayName: { type: "string", nullable: false }
                                }
                            },
                        },
                        type: "odata",
                        serverFiltering: true,
                        serverPaging: true,
                        pageSize: 20,
                        transport: {
                            read: {
                                url: "/odata/UserView?&filter=GroupId ne null",
                                dataType: "json",
                                contentType: "application/json",
                            }
                        },
                        //filter: { filters: [{ field: "AssignedToId", operator: "ne", value: query }] },
                        parametermap: function(data, operation) {
                            if (operation === "read") {
                                var parammap = kendo.data.transports.odata.parametermap(data);
                                return parammap;
                            }
                            return json.stringify(data);
                        }
                    },
                });
        }

        function byDropDownEditor(container) {
            $('<input data-bind="value:AssignedById"/>')
                .appendTo(container)
                .kendoDropDownList({
                    dataTextField: "DisplayName",
                    dataValueField: "UserId",
                    optionLabel: "--Select Teacher--",
                    dataSource: {
                        schema: {
                            data: "value",
                            total: function(response) {
                                return response['odata.count'];
                            },
                            model: {
                                id: "UserId",
                                fields: {
                                    UserId: { editable: false, type: "number" },
                                    DisplayName: { type: "string", nullable: false }
                                }
                            },
                        },
                        type: "odata",
                        serverFiltering: true,
                        serverPaging: true,
                        pageSize: 20,
                        transport: {
                            read: {
                                url: "/odata/UserView?&filter=GroupId eq null",
                                dataType: "json",
                                contentType: "application/json",
                            }
                        },
                        //filter: { filters: [{ field: "AssignedById", operator: "eq", value: query }] },
                        parametermap: function(data, operation) {
                            if (operation === "read") {
                                var parammap = kendo.data.transports.odata.parametermap(data);
                                return parammap;
                            }
                            return json.stringify(data);
                        }
                    },
                });
        }

        function taskDropDownEditor(container) {
            $('<input data-bind="value:UserId"/>')
                .appendTo(container)
                .kendoDropDownList({
                    dataTextField: "DisplayName",
                    dataValueField: "GroupId",
                    optionLabel: "--Select Group--",
                    dataSource: {
                        schema: {
                            data: "value",
                            total: function(response) {
                                return response['odata.count'];
                            },
                            model: {
                                id: "GroupId",
                                fields: {
                                    GroupId: { editable: false, type: "number" },
                                    DisplayName: { type: "string", nullable: false },
                                }
                            },
                        },
                        type: "odata",
                        serverFiltering: true,
                        serverPaging: true,
                        pageSize: 20,
                        transport: {
                            read: {
                                url: "/odata/Groups",
                                dataType: "json",
                                contentType: "application/json"
                            }
                        },
                        parametermap: function(data, operation) {
                            if (operation === "read") {
                                var parammap = kendo.data.transports.odata.parametermap(data);
                                return parammap;
                            }
                            return json.stringify(data);
                        }
                    }
                });
        }

        function dateVisitPickerEditor(container) {
            $.getJSON('/odata/Lessons', function(lessons) {
                $('<input data-bind="value:LessonId"/>')
                    .appendTo(container)
                    .kendoDatePicker({
                        value: new Date(),
                        min: new Date(2013, 0, 1),
                        dates: $.map(lessons.value, function(lesson) { return +new Date(lesson.Date);}),
                        month: {
                            content: '# if ($.inArray(+data.date, data.dates) != -1) { #' +
                                '<div class="enableDay">#= data.value #</div>' +
                                '# } else { #' +
                                '<div class="disableDay">#= data.value #</div>' +
                                '# } #'
                        },
                        open: function() {
                            $(".disableDay").parent().removeClass("k-link");
                            $(".disableDay").parent().removeAttr("href");
                        }
                    })
                    .data("kendoDatePicker");
            });
        }

        function error(e) {
            if (e.errorThrown === "Bad Request") {
                var response = JSON.parse(e.xhr.responseText);
                console.log(response);
                if (response['odata.error'] != undefined) {
                    alert(response['odata.error'].message.value);
                }
            } else {
                alert(e.status + ": " + e.errorThrown);
            }
        };

    </script>
}

